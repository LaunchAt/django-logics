# Generated by Django 4.1.5 on 2023-01-06 06:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='created date-time'
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True, verbose_name='updated date-time'
                    ),
                ),
                (
                    'deleted_at',
                    models.DateTimeField(
                        default=None,
                        editable=False,
                        null=True,
                        verbose_name='deleted date-time',
                    ),
                ),
                (
                    'calling_code',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=32,
                        verbose_name='calling code',
                    ),
                ),
                (
                    'capital_name',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=64,
                        verbose_name='capital name',
                    ),
                ),
                (
                    'currency_code',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=3,
                        validators=[
                            django.core.validators.RegexValidator('^[A-Z]{3}\\Z')
                        ],
                        verbose_name='currency code',
                    ),
                ),
                (
                    'currency_name',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=64,
                        verbose_name='currency name',
                    ),
                ),
                (
                    'currency_symbol',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=16,
                        verbose_name='currency symbol',
                    ),
                ),
                (
                    'emoji',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=2,
                        validators=[
                            django.core.validators.RegexValidator(
                                '[üòÄ-üôèüåÄ-üóøüöÄ-\U0001f6ff\U0001f1e0-üáø‚îÄ-‚ØØ‚úÇ-‚û∞‚úÇ-‚û∞‚ìÇ-üâëü§¶-ü§∑êÄÄ-\U0010ffff‚ôÄ-‚ôÇ‚òÄ-‚≠ï\u200d‚èè‚è©‚åöÔ∏è„Ä∞]+'
                            )
                        ],
                        verbose_name='emoji',
                    ),
                ),
                (
                    'iso2_code',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=2,
                        validators=[
                            django.core.validators.RegexValidator('^[A-Z]{2}\\Z')
                        ],
                        verbose_name='country code (ISO 3166-1 alpha-2)',
                    ),
                ),
                (
                    'iso3_code',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=3,
                        validators=[
                            django.core.validators.RegexValidator('^[A-Z]{3}\\Z')
                        ],
                        verbose_name='country code (ISO 3166-1 alpha-3)',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        max_length=64, unique=True, verbose_name='country name'
                    ),
                ),
                (
                    'native_name',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=64,
                        verbose_name='country name in native language',
                    ),
                ),
                (
                    'numeric_code',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=3,
                        validators=[
                            django.core.validators.RegexValidator('^[0-9]{3}\\Z')
                        ],
                        verbose_name='numeric code (ISO 3166-1 numeric)',
                    ),
                ),
                (
                    'region',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=16,
                        verbose_name='region name',
                    ),
                ),
                (
                    'subregion',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=32,
                        verbose_name='subregion name',
                    ),
                ),
                (
                    'tld',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=2,
                        validators=[
                            django.core.validators.RegexValidator('^.[a-z]{2}\\Z')
                        ],
                        verbose_name='ccTLD (country code top-level domain)',
                    ),
                ),
            ],
            options={
                'verbose_name': 'country',
                'verbose_name_plural': 'countries',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Timezone',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='created date-time'
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True, verbose_name='updated date-time'
                    ),
                ),
                (
                    'deleted_at',
                    models.DateTimeField(
                        default=None,
                        editable=False,
                        null=True,
                        verbose_name='deleted date-time',
                    ),
                ),
                (
                    'abbreviation',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=8,
                        verbose_name='abbreviation',
                    ),
                ),
                ('code', models.CharField(max_length=64, verbose_name='code')),
                (
                    'utc_offset',
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name='utc offset (sec)',
                    ),
                ),
                (
                    'utc_offset_name',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=16,
                        validators=[
                            django.core.validators.RegexValidator(
                                '^UTC[¬±+-]\\d\\d(:\\d\\d)?\\Z'
                            )
                        ],
                        verbose_name='utc offset name',
                    ),
                ),
                ('name', models.CharField(max_length=64, verbose_name='timezone name')),
                (
                    'country',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to='address.country',
                        verbose_name='country',
                    ),
                ),
            ],
            options={
                'verbose_name': 'timezone',
                'verbose_name_plural': 'timezones',
                'ordering': ('code', 'abbreviation'),
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='created date-time'
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True, verbose_name='updated date-time'
                    ),
                ),
                (
                    'deleted_at',
                    models.DateTimeField(
                        default=None,
                        editable=False,
                        null=True,
                        verbose_name='deleted date-time',
                    ),
                ),
                (
                    'code',
                    models.CharField(
                        blank=True, default='', max_length=8, verbose_name='code'
                    ),
                ),
                ('name', models.CharField(max_length=64, verbose_name='state name')),
                (
                    'native_name',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=64,
                        verbose_name='state name in native language',
                    ),
                ),
                (
                    'type',
                    models.CharField(
                        blank=True, default='', max_length=64, verbose_name='type'
                    ),
                ),
                (
                    'country',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to='address.country',
                        verbose_name='country',
                    ),
                ),
            ],
            options={
                'verbose_name': 'state',
                'verbose_name_plural': 'states',
                'ordering': ('country', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='created date-time'
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True, verbose_name='updated date-time'
                    ),
                ),
                (
                    'deleted_at',
                    models.DateTimeField(
                        default=None,
                        editable=False,
                        null=True,
                        verbose_name='deleted date-time',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=128,
                        verbose_name='locality name',
                    ),
                ),
                (
                    'native_name',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=128,
                        verbose_name='locality name in native language',
                    ),
                ),
                (
                    'postal_code',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=16,
                        verbose_name='postal code',
                    ),
                ),
                (
                    'state',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to='address.state',
                        verbose_name='state',
                    ),
                ),
            ],
            options={
                'verbose_name': 'locality',
                'verbose_name_plural': 'localities',
                'ordering': (
                    'state__country__name',
                    'state__name',
                    'name',
                    'native_name',
                ),
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='created date-time'
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True, verbose_name='updated date-time'
                    ),
                ),
                (
                    'deleted_at',
                    models.DateTimeField(
                        default=None,
                        editable=False,
                        null=True,
                        verbose_name='deleted date-time',
                    ),
                ),
                (
                    'apartment_name',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=128,
                        verbose_name='apartment name',
                    ),
                ),
                (
                    'latitude',
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        default=None,
                        max_digits=9,
                        null=True,
                        verbose_name='latitude',
                    ),
                ),
                (
                    'longitude',
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        default=None,
                        max_digits=9,
                        null=True,
                        verbose_name='longitude',
                    ),
                ),
                (
                    'native_apartment_name',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=128,
                        verbose_name='apartment name in native language',
                    ),
                ),
                (
                    'native_street_address',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=128,
                        verbose_name='street address in native language',
                    ),
                ),
                (
                    'street_address',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=128,
                        verbose_name='street address',
                    ),
                ),
                (
                    'locality',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to='address.locality',
                        verbose_name='locality',
                    ),
                ),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
                'ordering': (
                    'locality__state__country__name',
                    'locality__state__name',
                    'locality__name',
                    'street_address',
                    'native_street_address',
                ),
            },
        ),
        migrations.AddConstraint(
            model_name='timezone',
            constraint=models.UniqueConstraint(
                fields=('country', 'code'), name='unique_country_and_timezone_code'
            ),
        ),
        migrations.AddConstraint(
            model_name='state',
            constraint=models.UniqueConstraint(
                fields=('country', 'name', 'code'),
                name='unique_country_and_state_name_and_code',
            ),
        ),
        migrations.AddConstraint(
            model_name='locality',
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(('name__exact', ''), _negated=True),
                    models.Q(('native_name__exact', ''), _negated=True),
                    _connector='OR',
                ),
                name='required_name_or_native_name',
            ),
        ),
        migrations.AddConstraint(
            model_name='address',
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(('street_address__exact', ''), _negated=True),
                    models.Q(('native_street_address__exact', ''), _negated=True),
                    _connector='OR',
                ),
                name='required_street_address_or_native_street_address',
            ),
        ),
    ]
